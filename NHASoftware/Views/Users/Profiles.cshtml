@using Microsoft.AspNetCore.Identity
@using NHASoftware.Entities.Identity
@using NHASoftware.Services.FriendSystem
@model NHASoftware.Views.ViewModels.SocialVMs.ProfileVM
@inject UserManager<ApplicationUser> userManager
@inject IFriendSystem friendSystem

@{
    ViewData["Title"] = "User Profile";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<head>
    <link rel="stylesheet" href="~/css/Profile.css">
</head>

@{
    var friendCount = friendSystem.GetFriendCount(Model.User.Id);
    var friendLabel = friendCount > 1 ? "Friends" : "Friend";
}

<div class="container-fluid border border-primary">
    <div class="row">
        <div class="border-end border-primary col-4 align">
            <img class="img-fluid" src="~/ProfilePictures/@Model.User.ProfilePicturePath" alt="@Model.User.DisplayName's Profile Picture'"/>
        </div>
        <div class="col border-end border-bottom border-primary text-center">
            <a class="link-secondary h1">@friendCount @friendLabel</a>
        </div>
        <div class="col border-bottom border-primary">
            <h1 class="text-center h1">User Biography</h1>
            <div>This is a test biography that needs to be modified.This is a test biography that needs to be modified.
                This is a test biography that needs to be modified.This is a test biography that needs to be modified.</div>
            <div class="container-fluid">
                <div class="row">
                    <div class="col"></div>
                    <button class="btn-dark m-md-auto col-2">
                        edit
                    </button>
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="text-md-center border border-primary col-sm-4">
            <h1 class="text-md-center h1">@Model.User.DisplayName</h1>
        </div>

        @if (friendSystem.FriendRequestSent(@userManager.GetUserId(User), @Model.User.Id))
        {
            @Html.AntiForgeryToken()

            <div class="dropdown col-sm-4">
                <a class="btn btn-primary dropdown-toggle" href="#" role="button" id="FriendDropdown" data-bs-toggle="dropdown" aria-expanded="false">
                    <img src="~/Images/CheckMarkIcon.png" class=""/>
                    Friend Request Sent
                </a>

                <ul class="dropdown-menu" aria-labelledby="FriendDropdown">
                    <li>
                        <a id="RemoveFriendBtn" class="dropdown-item" recipientId="@Model.User.Id" senderId="@userManager.GetUserId(User)">Remove Friend</a>
                    </li>
                    <li>
                        <a id="BlockFriendBtn" class="dropdown-item" recipientId="@Model.User.Id" senderId="@userManager.GetUserId(User)">Block Ex-Friend</a>
                    </li>
                </ul>
            </div>
        }
        else if (friendSystem.IsFriends(@Model.User.Id, @userManager.GetUserId(User)))
        {
            @Html.AntiForgeryToken()

            <div class="dropdown col-sm-4">
                <a class="btn btn-primary dropdown-toggle" href="#" role="button" id="FriendDropdown" data-bs-toggle="dropdown" aria-expanded="false">
                    <img src="~/Images/CheckMarkIcon.png" class=""/>
                    Friends
                </a>

                <ul class="dropdown-menu" aria-labelledby="FriendDropdown">
                    <li>
                        <a id="RemoveFriendBtn" class="dropdown-item remove-friend" recipientId="@Model.User.Id" senderId="@userManager.GetUserId(User)">
                            Remove Friend
                        </a>
                    </li>
                    <li>
                        <a id="BlockFriendBtn" class="dropdown-item block-friend" recipientId="@Model.User.Id" senderId="@userManager.GetUserId(User)">
                            Block Ex-Friend
                        </a>
                    </li>
                </ul>
            </div>
        }
        else if (!User.Identity.IsAuthenticated && Context.Request.HttpContext.User != null)
        {

        }
        else
        {
            @Html.AntiForgeryToken()

            <div class="dropdown col-sm-4">
                <a class="btn btn-primary dropdown-toggle" href="#" role="button" id="FriendDropdown" data-bs-toggle="dropdown" aria-expanded="false">
                    Send Friend Request
                </a>

                <ul class="dropdown-menu" aria-labelledby="FriendDropdown">
                    <li>
                        <a id="AddFriendBtn" class="dropdown-item" recipientId="@Model.User.Id" senderId="@userManager.GetUserId(User)">
                            <img src="~/Images/plus_icon.png" class=""/>
                            Add Friend!
                        </a>
                    </li>
                    <li>
                        <a id="BlockFriendBtn" class="dropdown-item" recipientId="@Model.User.Id" senderId="@userManager.GetUserId(User)">
                            Block Ex-Friend
                        </a>
                    </li>
                </ul>
            </div>
        }
    </div>
</div>
<div>
    <div id="SocialWall">
        
        <div class="container-fluid">
            <p class="text-center h1 mt-3">User's Wall</p>
        </div>
        
        <div id="ContentFeed" profile-user-id="@Model.User.Id">
        </div>
    </div>
</div>

@section Scripts {
    <script src="~/Scripts/FriendSystem/AddFriend.js"></script>
    <script src="~/Scripts/Social_Feed/Gratitude.js"></script>
    <script src="~/Scripts/Social_Feed/ContentFeed.js"></script>


    <script type="text/javascript">
        RebuildFeedTextboxes();
    </script>
}
