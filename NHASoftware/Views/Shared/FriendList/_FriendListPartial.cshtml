@using Microsoft.AspNetCore.Identity
@using NHA.Website.Software.Entities.Identity
@using NHA.Website.Software.FeatureManagement
@using NHA.Website.Software.Services.FriendSystem
@using NHA.Website.Software.Services.SessionHistory
@using NHA.Website.Software.Services.Time
@using NHA.Website.Software.Services.RepositoryPatternFoundationals
@using NHA.Website.Software.Services.Sponsors

@inject IFriendSystem _FriendSystem
@inject SignInManager<ApplicationUser> _SignInManager
@inject UserManager<ApplicationUser> _UserManager
@inject IActiveSessionTracker _SessionTracker
@inject ITimeBender _TimeBender
@inject IUnitOfWork _UnitOfWork
@inject IAdMaximizerService AdMaximizerService


@{
    var featuredGame = (await _UnitOfWork.GamePageRepository.FindAsync(a => a.Featured)).FirstOrDefault();

    if (_SignInManager.IsSignedIn(User))
    {
        <div id="FriendListUI" class="col position-fixed overflow-scroll w-inherit" style="height: 100%;">
            <div class="row">
                <div class="friends-header">
                    <span>Friends List</span>
                </div>
            </div>

            @{
                var friends = await _FriendSystem.GetUsersFriendListAsync(_UserManager.GetUserId(User)!);
                Dictionary<ApplicationUser, string> onlineUsers = new Dictionary<ApplicationUser, string>();
                Dictionary<ApplicationUser, string> offlineUsers = new Dictionary<ApplicationUser, string>();


                foreach (var friend in friends)
                {
                    var lastSessionActivityDate = await _SessionTracker.GetUserLastActiveTime(friend);

                    if (lastSessionActivityDate.HasValue)
                    {
                        var minutesSinceLastActivity = (int)(DateTime.UtcNow - lastSessionActivityDate.Value).TotalMinutes;

                        if(minutesSinceLastActivity < 10)
                            onlineUsers.Add(friend, _TimeBender.GetTimeShortHandString(lastSessionActivityDate.Value));
                        else
                            offlineUsers.Add(friend, _TimeBender.GetTimeShortHandString(lastSessionActivityDate.Value));
                    }
                    else
                    {
                        offlineUsers.Add(friend, "offline");
                    }
                }

                <details class="row m-auto pt-2 pt-4" open>
                    <summary>Online (@onlineUsers.Count)</summary>
                    @{
                        foreach (var friend in onlineUsers)
                        {
                            Random random = new Random();
                            int friendButtonIdNumber = random.Next();
                            var newMessages = await _UnitOfWork.ChatMessageRepository.GetNewMessageBetweenUsersAsync(friend.Key.Id, _UserManager.GetUserId(User)!);


                            <div class="row m-auto rounded-1 p-1 border-top border-bottom border-dark dropdown">
                                <button id="friend-dropdown-@friendButtonIdNumber" class="col btn btn-dark border-primary border bg-opacity-50 rounded-pill p-0" data-bs-toggle="dropdown" aria-expanded="false" friend-id="@friend.Key.Id ">
                                    <div class="col row bg-transparent m-auto text-decoration-none fl-click" friend-id="@friend.Key.Id" role="button">
                                        <div class="col-2 m-auto p-0">
                                            <img src="~/ProfilePictures/@friend.Key.ProfilePicturePath" friend-id="@friend.Key.Id" class="img-fluid col-12 rounded-start-pill bg-primary" />
                                        </div>
                                        <div class="col m-auto text-wrap text-truncate" friend-id="@friend.Key.Id">@friend.Key.DisplayName</div>
                                        <div class="col-auto m-auto bg-success rounded-pill" friend-id="@friend.Key.Id">@friend.Value</div>
                                    </div>
                                </button>
                                <ul class="dropdown-menu" aria-labelledby="friend-dropdown-@friendButtonIdNumber" style="z-index: 1002342442;">
                                    <li>
                                        <button id="OpenChat" class="dropdown-item open-chat" type="button" friend-id="@friend.Key.Id" )>
                                            <div class="row" friend-id="@friend.Key.Id">
                                                <div class="col" friend-id="@friend.Key.Id">Chat</div>

                                                @if (newMessages.Count > 0)
                                                {
                                                    <div id="Friend-chat-notification-counter-@friend.Key.Id" class="bg-danger rounded-circle col-2 m-auto p-1" friend-id="@friend.Key.Id">
                                                        <div class="text-center m-auto h5 text-white" friend-id="@friend.Key.Id">@newMessages.Count</div>
                                                    </div>
                                                }
                                                else
                                                {
                                                    <div id="Friend-chat-notification-counter-@friend.Key.Id" class="bg-danger rounded-circle col-2 m-auto p-1" friend-id="@friend.Key.Id" style="display: none;">
                                                        <div class="text-center m-auto h5 text-white" friend-id="@friend.Key.Id">@newMessages.Count</div>
                                                    </div>
                                                }
                                            </div>
                                        </button>
                                    </li>
                                    <li><a class="dropdown-item" type="button" asp-controller="Users" asp-action="GetProfiles" asp-route-userId="@friend.Key.Id">Profile</a></li>
                                </ul>
                            </div>
                        }
                    }
                </details>
                <details class="row m-auto border-bottom border-primary mb-2 pb-4" open>
                    <summary>Offline (@offlineUsers.Count)</summary>
                    @{
                        foreach (var friend in offlineUsers)
                        {
                            Random random = new Random();
                            int friendButtonIdNumber = random.Next();
                            var newMessages = await _UnitOfWork.ChatMessageRepository.GetNewMessageBetweenUsersAsync(friend.Key.Id, _UserManager.GetUserId(User)!);


                            <div class="row m-auto rounded-1 p-1 border-top border-bottom border-dark dropdown">
                                <button id="friend-dropdown-@friendButtonIdNumber" class="col btn btn-dark border-primary border bg-opacity-50 rounded-pill p-0" data-bs-toggle="dropdown" aria-expanded="false" friend-id="@friend.Key.Id ">
                                    <div class="col row bg-transparent m-auto text-decoration-none fl-click" friend-id="@friend.Key.Id" role="button">
                                        <div class="col-2 m-auto p-0">
                                            <img src="~/ProfilePictures/@friend.Key.ProfilePicturePath" friend-id="@friend.Key.Id" class="img-fluid col-12 rounded-start-pill bg-primary" />
                                        </div>
                                        <div class="col m-auto text-wrap text-truncate" friend-id="@friend.Key.Id">@friend.Key.DisplayName</div>
                                        <div class="col-auto m-auto bg-primary rounded-pill" friend-id="@friend.Key.Id">@friend.Value</div>
                                    </div>
                                </button>
                                <ul class="dropdown-menu" aria-labelledby="friend-dropdown-@friendButtonIdNumber" style="z-index: 1002342442;">
                                    <li>
                                        <button id="OpenChat" class="dropdown-item open-chat" type="button" friend-id="@friend.Key.Id")>
                                            <div class="row" friend-id="@friend.Key.Id">
                                                <div class="col" friend-id="@friend.Key.Id">Chat</div>
                                                
                                                @if (newMessages.Count > 0)
                                                {
                                                    <div id="Friend-chat-notification-counter-@friend.Key.Id" class="bg-danger rounded-circle col-2 m-auto p-1" friend-id="@friend.Key.Id">
                                                        <div class="text-center m-auto h5 text-white" friend-id="@friend.Key.Id">@newMessages.Count</div>
                                                    </div>
                                                }
                                                else
                                                {
                                                    <div id="Friend-chat-notification-counter-@friend.Key.Id" class="bg-danger rounded-circle col-2 m-auto p-1" friend-id="@friend.Key.Id" style="display: none;">
                                                        <div class="text-center m-auto h5 text-white" friend-id="@friend.Key.Id">@newMessages.Count</div>
                                                    </div>
                                                }

                                            </div>
                                        </button>
                                    </li>
                                    <li><a class="dropdown-item" type="button" asp-controller="Users"  asp-action="GetProfiles" asp-route-userId="@friend.Key.Id">Profile</a></li>
                                </ul>
                            </div>
                        }
                    }
                </details>
            }
            
            @if (featuredGame is not null)
            {
                <div class="row">
                    <div class="featured-header">
                        <span>Featured</span>
                    </div>
                </div>
        
                <div class="row m-auto pt-1 pb-1 text-center">
                    <a asp-action="GamePage" class="h5 text-body text-decoration-none interactable fw-semibold" asp-controller="Game" asp-route-id="@featuredGame.Id">@featuredGame.Name</a>
                    <div class="">
                        <a class="row text-center m-auto rounded-2 interactable" asp-controller="Game" asp-action="GamePage" asp-route-id="@featuredGame.Id">
                            <img src="@featuredGame.ImageUrl" class="rounded-3 p-0" alt="@featuredGame.Name's cover photo" />
                        </a>
                    </div>
                    <div class="multiline-ellipsis" style="max-width: 350px;">
                        @Html.Raw(@featuredGame.Summary)
                    </div>
                    
                    <div class="align-content-center p-0">
                        @if (@featuredGame.Genres != null)
                        {
                            var genres = @featuredGame.Genres.Split(';');

                            for (int i = 0; i < genres.Length; i++)
                            {
                                switch (i)
                                {
                                    case 0:
                                        <a asp-controller="Home" asp-action="Index" class="col-auto text-decoration-none">
                                            <span class="badge text-bg-primary border-2 interactable">@genres[i]</span>
                                        </a>
                                        break;
                                    case 1:
                                        <a asp-controller="Home" asp-action="Index" class="col-auto text-decoration-none">
                                            <span class="badge text-bg-success border-2 interactable">@genres[i]</span>
                                        </a>
                                        break;
                                    case 2:
                                        <a asp-controller="Home" asp-action="Index" class="col-auto text-decoration-none">
                                            <span class="badge text-bg-dark border-2 interactable">@genres[i]</span>
                                        </a>
                                        break;
                                }
                            }
                        }
                    </div>

                </div>
            }
            <div class="row">
                <div class="featured-header">
                    <span>Sponsors</span>
                </div>
            </div>

            @{
                var ads = await AdMaximizerService.GetBestAdsForUserAsync();

                foreach (var ad in ads)
                {

                    if (ad.VideoUrl != null)
                    {
                        <feature name="@FeatureFlags.SponsorAdsEnabled">
                            <div class="row m-auto pt-1 pb-1 text-center">
                                <div class="col">
                                    <div class="ratio ratio-16x9 rounded-2 overflow-hidden">
                                        <iframe src="@ad.VideoUrl"
                                                title="YouTube video"
                                                allowfullscreen
                                                allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture">
                                        </iframe>
                                    </div>
                                </div>
                            </div>
                        </feature>
                    }

                    if (ad.ImageUrl != null)
                    {
                        <div class="row m-auto pt-1 pb-1 text-center">
                            <iframe src=@ad.ImageUrl
                                    title="Sponsor Video"
                                    height="350px"
                                    allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share"
                                    allowfullscreen>
                            </iframe>
                        </div>
                    }
                }
            }
        </div>
    }
    else
    {
        <div class="position-fixed m-auto align-content-center align-items-center">
            @if (featuredGame is not null)
            {
                <div class="row">
                    <div class="featured-header">
                        <span>Featured</span>
                    </div>
                </div>
        
                <div class="row m-auto pt-1 pb-1 text-center">
                    <a asp-action="GamePage" class="h5 text-body text-decoration-none interactable fw-semibold" asp-controller="Game" asp-route-id="@featuredGame.Id">@featuredGame.Name</a>
                    <div class="">
                        <a class="row text-center m-auto rounded-2 interactable" asp-controller="Game" asp-action="GamePage" asp-route-id="@featuredGame.Id">
                            <img src="@featuredGame.ImageUrl" class="rounded-3 p-0" alt="@featuredGame.Name's cover photo" />
                        </a>
                    </div>
                    <div class="multiline-ellipsis" style="max-width: 350px;">
                        @Html.Raw(@featuredGame.Summary)
                    </div>
                    <div class="align-content-center p-0">
                        @if (@featuredGame.Genres != null)
                        {
                            var genres = @featuredGame.Genres.Split(';');

                            for (int i = 0; i < genres.Length; i++)
                            {
                                switch (i)
                                {
                                    case 0:
                                        <a asp-controller="Home" asp-action="Index" class="col-auto text-decoration-none">
                                            <span class="badge text-bg-primary border-2 interactable">@genres[i]</span>
                                        </a>
                                        break;
                                    case 1:
                                        <a asp-controller="Home" asp-action="Index" class="col-auto text-decoration-none">
                                            <span class="badge text-bg-success border-2 interactable">@genres[i]</span>
                                        </a>
                                        break;
                                    case 2:
                                        <a asp-controller="Home" asp-action="Index" class="col-auto text-decoration-none">
                                            <span class="badge text-bg-dark border-2 interactable">@genres[i]</span>
                                        </a>
                                        break;
                                }
                            }
                        }
                    </div>
                </div>
            }
            
            @{
                var ads = await AdMaximizerService.GetBestAdsForUserAsync();

                foreach (var ad in ads)
                {

                    if (ad.VideoUrl != null)
                    {
                        <feature name="@FeatureFlags.SponsorAdsEnabled">
                            <div class="row m-auto pt-1 pb-1 text-center">
                                <div class="col">
                                    <div class="ratio ratio-16x9 rounded-2 overflow-hidden">
                                        <iframe src="@ad.VideoUrl"
                                                title="YouTube video"
                                                allowfullscreen
                                                allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture">
                                        </iframe>
                                    </div>
                                </div>
                            </div>
                        </feature>
                    }

                    if (ad.ImageUrl != null)
                    {
                        <div class="row m-auto pt-1 pb-1 text-center">
                            <iframe src=@ad.ImageUrl
                                    title="Sponsor Video"
                                    height="350px"
                                    allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share"
                                    allowfullscreen>
                            </iframe>
                        </div>
                    }
                }
            }
        </div>
    }
}