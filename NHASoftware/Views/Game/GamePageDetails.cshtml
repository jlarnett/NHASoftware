@using NHA.Website.Software.Services.RepositoryPatternFoundationals
@model NHA.Website.Software.Entities.Game.GamePage
@inject IUnitOfWork UnitOfWork;

@{
    ViewData["Title"] = @Model.Name;
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@{
    string ConvertPlatformToIcon(string platform)
    {
        if (platform.Equals("PC", StringComparison.OrdinalIgnoreCase))
        {
            return "/Images/pc-computer-with-monitor_icon-icons.com_56249.png";
        }

        var lowerPlatform = platform.ToLower();
        if (lowerPlatform.Contains("playstation"))
        {
            return "/Images/Playstation_icon-icons.com_67099.png";
        }

        if (lowerPlatform.Contains("xbox"))
        {
            return "/Images/microsoft_xbox_icon_136396.png";
        }

        return "";
    }
}

<div>
    <h2>@Model.Name</h2>
    <hr />
    
    @{
        if (@Model.ImageUrl != null)
        {
            <div class="row mb-4">
                <div class="col-6">
                    <img src="@Model.ImageUrl" class="img-fluid"/>
                </div>
            </div>
        }
        if (@Model.GameScore != null)
        {
            <div>RawgScore: <strong>@Model.GameScore</strong></div>
        }
        if (@Model.Released != null)
        {
            <div>Released on: <strong>@Model.Released</strong></div>            
        }

        <hr/>

        <div class="row">
            @if (@Model.Genres != null)
            {
                var genres = @Model.Genres.Split(';');

                <div class="col">
                    <div class="h5 text-primary">Genres:</div>

                    @for (int i = 0; i < genres.Length; i++)
                    {
                        if (i % 2 == 0)
                        {
                            <span class="badge text-bg-dark p-2 mb-2">@genres[i]</span>
                        }
                        else
                        {
                            <span class="badge text-bg-primary p-2 mb-2">@genres[i]</span>
                        }
                    }
                </div>

                
                
                <div class="col">
                    @if (@Model.Platforms != null)
                    {
                        var platforms = @Model.Platforms.Split(';');
                        var colorIndex = 0;

                        <div class="h5 text-dark">Platforms:</div>

                        for (int i = 0; i < platforms.Length; i++)
                        {
                            switch (i)
                            {
                                case 0:
                                    <span class="badge text-bg-primary col-auto p-2"><img src="@ConvertPlatformToIcon(platforms[i])" class="me-1"/>@platforms[i]</span>
                                    break;
                                case 1:
                                    <span class="badge text-bg-warning col-auto p-2"><img src="@ConvertPlatformToIcon(platforms[i])" class="me-1" />@platforms[i]</span>
                                    break;
                                case 2:
                                    <span class="badge text-bg-dark col-auto p-2"><img src="@ConvertPlatformToIcon(platforms[i])" class="me-1" />@platforms[i]</span>
                                    colorIndex = 0;
                                    break;
                            }

                            colorIndex++;
                        }
                    }
                </div>

            }
        </div>
    }
    
    <hr/>
    <div class="AnimeSummary">
        @Html.Raw(@Model.Summary)
    </div>
</div>

@{
    var gamePageCount = await UnitOfWork.GamePageRepository.CountAsync(c => !c.Id.Equals(null));
    var randomGameIndex = Random.Shared.Next(0, gamePageCount);
    var animeList = await UnitOfWork.GamePageRepository.GetAllAsync();
}

<div>
    <a asp-action="Edit" asp-route-id="@Model?.Id">Edit</a> |
    <a asp-action="Index">Back to List</a> | 
    <a asp-action="GamePage" asp-route-id="@animeList.ElementAt(randomGameIndex).Id" asp-controller="Game">Next &#x2794;</a>
</div>
